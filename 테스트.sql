SELECT * FROM RESERVATION_TBL
ORDER BY R_PAY DESC
;

SELECT * FROM DRIVERS_TBL;
--2만원 이상이면 고, 2만원 이하면 중 1만원 미만일때 하
SELECT * FROM RESERVATION_TBL;

SELECT R_PAY,
    CASE
        WHEN R_PAY >= 20000 THEN '고'
        WHEN R_PAY >= 10000 AND R_PAY < 20000 THEN '중'
        ELSE '하'
    END AS PRICETXT
FROM reservation_tbl;

--2만원 이상이면 80&수익 2만원 미만이면 90프로를 가져간다.
--ALIAS 알리아스 AS

--뽑아낸 ROW를 테이블로 사용하고자 하면 괄호로 싸야한다
SELECT * FROM(
SELECT R_TEL, SUM
(R_PAY *
    CASE
        WHEN R_PAY >= 20000 THEN 0.8 --메모리에 존재하는 테이블
        ELSE 0.9
        END
) AS TLTPRICE
FROM RESERVATION_TBL
GROUP BY R_TEL
ORDER BY TLTPRICE DESC)
WHERE TLTPRICE > 50000
;
--INLINE VIEW

--메모리상에 존재하는 테이블을 VIEW 라고 한다


--남자인 경우 총숫자에 3을 곱하고 여자는 2를 곱한값
SELECT DR_GENDER, COUNT(*) 
FROM DRIVERS_TBL
GROUP BY DR_GENDER;


SELECT * FROM DRIVERS_TBL;
SELECT * FROM DR_MEMBER_TBL;
SELECT * FROM RESERVATION_TBL;
SELECT * FROM FINISH_DRIVE_TBL;
SELECT * FROM DRIVER_RST_TBL;


SELECT * FROM RESERVATION_TBL
WHERE R_PAY = (SELECT MAX(R_PAY) FROM reservation_tbl)
;

SELECT * FROM RESERVATION_TBL
WHERE R_STR IN ('부경대앞', '동의대앞')
;
--같다
SELECT * FROM RESERVATION_TBL
WHERE R_STR = '부경대앞' OR R_STR = '동의대앞'
;

SELECT * FROM DRIVERS_TBL; 7
SELECT * FROM DR_MEMBER_TBL; 6
SELECT * FROM RESERVATION_TBL; 15
SELECT * FROM FINISH_DRIVE_TBL; 13
SELECT * FROM DRIVER_RST_TBL; 13


--30000이상 예약을 마무리한 기사
SELECT T1.R_ID ,T1.R_PAY
FROM RESERVATION_TBL T1, DRIVER_RST_TBL T2, DRIVERS_TBL T3
WHERE T1.R_ID = T2.R_ID(+)
AND R_PAY >= 30000
;

SELECT * FROM DRIVERS_TBL; 7
SELECT * FROM DR_MEMBER_TBL; 6
SELECT * FROM RESERVATION_TBL; 15
SELECT * FROM FINISH_DRIVE_TBL; 13
SELECT * FROM DRIVER_RST_TBL; 13

--3만원 이상 대리가 콜이 되지 않은 예약
SELECT *
FROM RESERVATION_TBL T1, FINISH_DRIVE_TBL T2
WHERE T1.R_ID = T2.R_ID(+)
AND T1.R_PAY >= 30000
AND T2.F_GUBUN = 2
;

------------------------------------------------

SELECT * FROM DRIVERS_TBL; 7 T1
SELECT * FROM DR_MEMBER_TBL; 6
SELECT * FROM RESERVATION_TBL; 15 T3
SELECT * FROM FINISH_DRIVE_TBL; 13
SELECT * FROM DRIVER_RST_TBL; 13 T2

SELECT *
FROM DRIVERS_TBL T1, DRIVER_RST_TBL T2, RESERVATION_TBL T3
WHERE T1.DR_ID = T2.DR_ID(+)
AND T2.R_ID = T3.R_ID(+)
;

SELECT *
FROM DRIVERS_TBL T1, DRIVER_RST_TBL T2, RESERVATION_TBL T3
WHERE T1.DR_ID = T2.DR_ID(+)
AND T2.R_ID(+) = T3.R_ID
;

SELECT *
FROM DRIVERS_TBL T1, DRIVER_RST_TBL T2
WHERE T1.DR_ID = T2.DR_ID(+)
;

SELECT *
FROM DRIVER_RST_TBL T2, RESERVATION_TBL T3
WHERE T2.R_ID(+) = T3.R_ID
;

SELECT *
FROM DRIVER_RST_TBL T2, RESERVATION_TBL T3
WHERE T2.R_ID(+) = T3.R_ID
;


-- T1 : 7개 
-- T2 : 13개
-- T3 : 15개

-- 7, 13(+) AND 13(+), 15 = 105
-- 7, 13(+) AND 13, 15(+) = 15

SELECT *
FROM DRIVERS_TBL T1, DRIVER_RST_TBL T2, RESERVATION_TBL T3
WHERE T1.DR_ID = T2.DR_ID(+)
AND T2.R_ID = T3.R_ID(+)
;

SELECT *FROM DRIVERS_TBL;DFDFDFFHF
SELECT *FROM DRIVER_RST_TBL;
SELECT *FROM RESERVATION_TBL


SELECT *
FROM DRIVER_RST_TBL T2, RESERVATION_TBL T3
WHERE T2.R_ID(+) = T3.R_ID
;

13 15 13
SELECT * FROM DRIVERS_TBL; 7
SELECT * FROM DR_MEMBER_TBL; 6
SELECT * FROM RESERVATION_TBL; 15
SELECT * FROM FINISH_DRIVE_TBL; 13
SELECT * FROM DRIVER_RST_TBL; 13

--예약들중에 콜이 잡히지 않고 자연스럽게 취소되버린 놈들
--예약은 15건 실행된건 13건

SELECT * 
FROM RESERVATION_TBL T1, DRIVER_RST_TBL T2
WHERE T1.R_ID = T2.R_ID(+)
AND T2.R_ID IS NULL
;

SELECT ADATE, COUNT(*)
FROM STUDENTS T1. ATTENDANCE T2
WHERE T1.SID = T2.SID(+)
AND T2.SID IS NULL
GROUP BY ADATE
;

